scalar Date
scalar Upload

type Query {
  calculation(id: ID!): Calculation!
  calculations(query: String, skip: Int, take: Int, cursor: String): [Calculation!]!
  calculationList(query: String, skip: Int, take: Int, cursor: String): CalculationList

  files(query: String, skip: Int, take: Int, cursor: String): [File!]!
}

type Mutation {
  createCalculation(data: CreateCalculationInput!): Calculation!
  updateCalculation(id: ID!, data: UpdateCalculationInput!): Calculation!
  deleteCalculation(id: ID!): Calculation!

  uploadFile (file: Upload!): File!
  deleteFile (file: DeleteFileInput!): File!
}

type CalculationList {
  count: Int!
  hasNextPage: Boolean!
  calculations(
    query: String
    cursor: String
    take: Int
    skip: Int
  ): [Calculation!]!
}

type Calculation {
  id: ID!
  title: String!
  result: Float!
  order: Int!
  file: File
  isDeleted: Boolean!
  createdAt: Date!
  updatedAt: Date!
}

type File {
  id: ID!
  uid: String!
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
  calculation: Calculation
}

input CreateCalculationInput {
  title: String!
  result: Float!
  order: Int!
  fileId: String
}

input UpdateCalculationInput {
  title: String
  result: Float
  order: Int
  fileId: String
}

input DeleteFileInput {
  uid: String!
  filename: String!
}